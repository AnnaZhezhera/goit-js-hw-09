{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAaC,SAASC,cAAc,SAC1BD,SAASC,cAAc,SAEvC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MAIPL,EAAWa,iBAAiB,UAE5B,SAAsBC,GACpBA,EAAMC,iBASN,IAPA,IAAMC,EAAeF,EAAMG,cAAcC,SACnCC,EAAaC,SAASJ,EAAaX,MAAMgB,OACzCC,EAAYF,SAASJ,EAAaO,KAAKF,OACvCG,EAAcJ,SAASJ,EAAaS,OAAOJ,OAIxCK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EAAG,CACxC,IAAIC,EAAeR,GAAcO,EAAI,GAAKJ,EAC1CM,QAAQC,IAAIF,EAAcR,EAAYG,GACtCnB,EAAcuB,EAAGC,GACdG,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAAlC,GAASmC,OAAOC,QACd,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,UAGjD+B,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,EAAAlC,GAASmC,OAAOI,QACd,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,c","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport '../../node_modules/notiflix/dist/notiflix-3.2.5.min.css';\n\nconst formSubmit = document.querySelector('.form');\nconst inputEl = document.querySelector('input');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformSubmit.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const formElements = event.currentTarget.elements;\n  const inputDelay = parseInt(formElements.delay.value);\n  const inputStep = parseInt(formElements.step.value);\n  const inputAmount = parseInt(formElements.amount.value);\n\n  // console.log(inputAmount, inputDelay, inputStep);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    let currentDelay = inputDelay + (i - 1) * inputStep;\n    console.log(currentDelay, inputDelay, inputStep);\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formSubmit","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","formElements","currentTarget","elements","inputDelay","parseInt","value","inputStep","step","inputAmount","amount","i","currentDelay","console","log","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.9a6e9047.js.map"}